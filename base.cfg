[buildout]
parts = sentry
allow-picked-versions = false
show-picked-versions = true
versions = versions

parts = 
    env
    mkdir
    supervisor
    sentry
    redis
    redis-build
    redis-conf
    sentry-conf-yml
    sentry-conf-py

extends = versions.cfg
versions = versions

[conf]
baseport    = 8130
memcached   = 9130
redis       = 10130
sentry      = ${:baseport}

projectname = sentry

release = devel
memcached-size = 128

#postgres
postgresport = 5432
postgresname = sentry
postgresuser = sentry
postgrespw =  QNyPdxTxKJr7toL2htGR

#outgoing sentry mail
mailhost = localhost
mailport = 25
mailfrom = sentry@zestsoftware.nl

[sentry]
recipe = zc.recipe.egg
eggs = sentry

[env]
recipe = gocept.recipe.env

[mkdir]
recipe = z3c.recipe.mkdir
paths =
        var/run
        var/redis
        var/sentry-files

[supervisor]
recipe = collective.recipe.supervisor
user = webserverinterfaceunused
password = webserverpasswordunused
file = ${buildout:directory}/var/supervisor.sock
http-socket = unix
logfile-maxbytes = 5MB
logfile-backups = 10
supervisord-environment = PYTHONUNBUFFERED="true",SENTRY_CONF="${buildout:directory}/etc"
programs =
      10 redis  (stderr_logfile=NONE stdout_logfile=${buildout:directory}/var/log/redis-stdout.log) ${buildout:directory}/parts/redis/src/redis-server [${buildout:directory}/etc/redis.conf] true
      20 memcached (stderr_logfile=NONE stdout_logfile=${buildout:directory}/var/log/memcached-stdout.log) ${memcached:location}/bin/memcached [ -m ${conf:memcached-size} -l localhost -p ${conf:memcached} -U ${conf:memcached} ] true
      30 sentryweb (stderr_logfile=NONE stdout_logfile=${buildout:directory}/var/log/sentryweb-stdout.log) ${buildout:directory}/bin/sentry [run web] true
      40 sentryworker1 (stderr_logfile=NONE stdout_logfile=${buildout:directory}/var/log/sentryworker1-stdout.log) ${buildout:directory}/bin/sentry [run worker] true
      50 sentryworker2 (stderr_logfile=NONE stdout_logfile=${buildout:directory}/var/log/sentryworker2-stdout.log) ${buildout:directory}/bin/sentry [run worker] true
      60 sentrycron (stderr_logfile=NONE stdout_logfile=${buildout:directory}/var/log/sentrycron-stdout.log) ${buildout:directory}/bin/sentry [run cron] true

[redis]
recipe = hexagonit.recipe.download
strip-top-level-dir = true
url = ${downloads:redis-url}

[redis-build]
recipe = collective.recipe.cmd
on_install = true
on_update = false
cmds = cd ${redis:location} && make

[redis-conf]
recipe = collective.recipe.template
input = templates/redis.conf.in
output = etc/redis.conf

[sentry-conf-yml]
recipe = collective.recipe.template
input = templates/config.yml
output = etc/config.yml

[sentry-conf-py]
recipe = collective.recipe.template
input = templates/sentry.conf.py
output = etc/sentry.conf.py

[memcached]
recipe = zc.recipe.cmmi
url = ${downloads:memcached-url}